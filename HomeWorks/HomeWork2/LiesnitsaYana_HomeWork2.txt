----- TASK A: -----
using System;

namespace HomeWork2_task_A
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter first number: ");
            float number1 = float.Parse(Console.ReadLine());
            Console.WriteLine("Enter second number: ");
            float number2 = float.Parse(Console.ReadLine());
            Console.WriteLine("Enter third number: ");
            float number3 = float.Parse(Console.ReadLine());
            CheckingNumberRange(number1);
            CheckingNumberRange(number2);
            CheckingNumberRange(number3);


        }
        public static void CheckingNumberRange(float number)
        {
            Console.WriteLine((number >= -5.0 && number <= 5.0) ? 
                $"The number {number} is within the range from -5.0 to 5.0." :
                $"The number {number} is not within the range from -5 to 5.0.");
            Console.ReadKey();
        }
    }
}
----- TASK B: -----

using System;
using System.Linq;

namespace TaskB
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter the first number: ");
            int enteredNumber1 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter the second number: ");
            int enteredNumber2 = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter the third number: ");
            int enteredNumber3 = Convert.ToInt32(Console.ReadLine());
            int[] arrayOfNumbers = { enteredNumber1, enteredNumber2, enteredNumber3 };
            Console.WriteLine("Max number is {0} and min number is {1}", 
                CheckingMaxNumbers(arrayOfNumbers), CheckingMinNumbers(arrayOfNumbers));
            Console.ReadKey();
        }

        public static int CheckingMaxNumbers(int[] array)
        {
            int max = array.Max();
            return max;
        }

        public static int CheckingMinNumbers(int[] array)
        {
            int min = array.Min();
            return min;
        }
    }
}
----- TASK C: -----

using System;

namespace TaskC
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("We can explain any of errors: 400, 401, 402, 403: ");
            ErrorExplanation(400, Errors.Error400);
            ErrorExplanation(401, Errors.Error401);
            ErrorExplanation(402, Errors.Error402);
            ErrorExplanation(403, Errors.Error403);

        }

        enum Errors
        {
            Error400 = 1,
            Error401,
            Error402,
            Error403
        }

        static void ErrorExplanation(int enteredErrorNumber, Errors errors)
        {
            string explanation = null;
            switch (errors)
            {
                case Errors.Error400:
                    explanation = "Bad Request";
                    break;
                case Errors.Error401:
                    explanation = "Unauthorized";
                    break;
                case Errors.Error402:
                    explanation = "Payment Required";
                    break;
                case Errors.Error403:
                    explanation = "Forbidden";
                    break;
            }
            Console.WriteLine("The explanation of the entered error number is: {0}", explanation);
            Console.ReadKey();
        }
    }
}
----- TASK D: -----

using System;

namespace TaskD
{
    class Program
    {
        static void Main(string[] args)
        {
            Dog myDog;
            myDog.dogName = "Chapi";
            myDog.dogMark = "Dvor-terrier";
            myDog.dogAge = 5;
            Console.WriteLine(myDog);
            Console.ReadLine();
        }

        public struct Dog
        {
            public string dogName;
            public string dogMark;
            public int dogAge;

            public override string ToString()
            {
                return string.Format("The dog {0} is {1} and she is {2} years old.", dogName, dogMark, dogAge);
            }
        }
    }
}